// <auto-generated />
using System;
using Child_mg.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Child_mg.Migrations
{
    [DbContext(typeof(ChildDbContext))]
    [Migration("20240619065300_ImangeCommentAddForChild")]
    partial class ImangeCommentAddForChild
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Child_mg.Models.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Comment");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<int?>("IdClass")
                        .HasColumnType("int")
                        .HasColumnName("id_class");

                    b.Property<int?>("IdUsers")
                        .HasColumnType("int")
                        .HasColumnName("id_users");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Child__3214EC274711B9C9");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdUsers");

                    b.ToTable("Child", (string)null);
                });

            modelBuilder.Entity("Child_mg.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__class__3214EC27FB36ABDF");

                    b.HasIndex("IdUser");

                    b.ToTable("class", (string)null);
                });

            modelBuilder.Entity("Child_mg.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("IdClass")
                        .HasColumnType("int")
                        .HasColumnName("id_class");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__schedule__3214EC277A9423E3");

                    b.HasIndex("IdClass");

                    b.ToTable("schedule", (string)null);
                });

            modelBuilder.Entity("Child_mg.Models.ScheduleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdSchedule")
                        .HasColumnType("int")
                        .HasColumnName("id_schedule");

                    b.Property<int?>("IdSubject")
                        .HasColumnType("int")
                        .HasColumnName("id_subject");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__schedule__3214EC27023AABED");

                    b.HasIndex("IdSchedule");

                    b.HasIndex("IdSubject");

                    b.ToTable("schedule_info", (string)null);
                });

            modelBuilder.Entity("Child_mg.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__subject__3214EC27BB4483DA");

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("Child_mg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("IdentityId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC275EB0192A");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Account" }, "UQ__Users__B0C3AC4673A1329F")
                        .IsUnique()
                        .HasFilter("[Account] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Child_mg.Models.Child", b =>
                {
                    b.HasOne("Child_mg.Models.Class", "IdClassNavigation")
                        .WithMany("Children")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("Fk_ch_cl");

                    b.HasOne("Child_mg.Models.User", "IdUsersNavigation")
                        .WithMany("Children")
                        .HasForeignKey("IdUsers")
                        .HasConstraintName("Fk_ch_us");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdUsersNavigation");
                });

            modelBuilder.Entity("Child_mg.Models.Class", b =>
                {
                    b.HasOne("Child_mg.Models.User", "IdUserNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("Fk_cl_us");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Child_mg.Models.Schedule", b =>
                {
                    b.HasOne("Child_mg.Models.Class", "IdClassNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("Fk_sc_cl");

                    b.Navigation("IdClassNavigation");
                });

            modelBuilder.Entity("Child_mg.Models.ScheduleInfo", b =>
                {
                    b.HasOne("Child_mg.Models.Schedule", "IdScheduleNavigation")
                        .WithMany("ScheduleInfos")
                        .HasForeignKey("IdSchedule")
                        .HasConstraintName("Fk_scin_sc");

                    b.HasOne("Child_mg.Models.Subject", "IdSubjectNavigation")
                        .WithMany("ScheduleInfos")
                        .HasForeignKey("IdSubject")
                        .HasConstraintName("FK_scin_su");

                    b.Navigation("IdScheduleNavigation");

                    b.Navigation("IdSubjectNavigation");
                });

            modelBuilder.Entity("Child_mg.Models.Class", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Child_mg.Models.Schedule", b =>
                {
                    b.Navigation("ScheduleInfos");
                });

            modelBuilder.Entity("Child_mg.Models.Subject", b =>
                {
                    b.Navigation("ScheduleInfos");
                });

            modelBuilder.Entity("Child_mg.Models.User", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
